import{Logger as r}from"@ethersproject/logger";const e="bytes/5.7.0";"use strict";const t=new r(e);function isHexable(r){return!!r.toHexString}function addSlice(r){if(r.slice)return r;r.slice=function(){const e=Array.prototype.slice.call(arguments);return addSlice(new Uint8Array(Array.prototype.slice.apply(r,e)))};return r}function isBytesLike(r){return isHexString(r)&&!(r.length%2)||isBytes(r)}function isInteger(r){return"number"===typeof r&&r==r&&r%1===0}function isBytes(r){if(null==r)return false;if(r.constructor===Uint8Array)return true;if("string"===typeof r)return false;if(!isInteger(r.length)||r.length<0)return false;for(let e=0;e<r.length;e++){const t=r[e];if(!isInteger(t)||t<0||t>=256)return false}return true}function arrayify(r,e){e||(e={});if("number"===typeof r){t.checkSafeUint53(r,"invalid arrayify value");const e=[];while(r){e.unshift(255&r);r=parseInt(String(r/256))}0===e.length&&e.push(0);return addSlice(new Uint8Array(e))}e.allowMissingPrefix&&"string"===typeof r&&"0x"!==r.substring(0,2)&&(r="0x"+r);isHexable(r)&&(r=r.toHexString());if(isHexString(r)){let n=r.substring(2);n.length%2&&("left"===e.hexPad?n="0"+n:"right"===e.hexPad?n+="0":t.throwArgumentError("hex data is odd-length","value",r));const i=[];for(let r=0;r<n.length;r+=2)i.push(parseInt(n.substring(r,r+2),16));return addSlice(new Uint8Array(i))}return isBytes(r)?addSlice(new Uint8Array(r)):t.throwArgumentError("invalid arrayify value","value",r)}function concat(r){const e=r.map((r=>arrayify(r)));const t=e.reduce(((r,e)=>r+e.length),0);const n=new Uint8Array(t);e.reduce(((r,e)=>{n.set(e,r);return r+e.length}),0);return addSlice(n)}function stripZeros(r){let e=arrayify(r);if(0===e.length)return e;let t=0;while(t<e.length&&0===e[t])t++;t&&(e=e.slice(t));return e}function zeroPad(r,e){r=arrayify(r);r.length>e&&t.throwArgumentError("value out of range","value",arguments[0]);const n=new Uint8Array(e);n.set(r,e-r.length);return addSlice(n)}function isHexString(r,e){return!("string"!==typeof r||!r.match(/^0x[0-9A-Fa-f]*$/))&&(!e||r.length===2+2*e)}const n="0123456789abcdef";function hexlify(r,e){e||(e={});if("number"===typeof r){t.checkSafeUint53(r,"invalid hexlify value");let e="";while(r){e=n[15&r]+e;r=Math.floor(r/16)}if(e.length){e.length%2&&(e="0"+e);return"0x"+e}return"0x00"}if("bigint"===typeof r){r=r.toString(16);return r.length%2?"0x0"+r:"0x"+r}e.allowMissingPrefix&&"string"===typeof r&&"0x"!==r.substring(0,2)&&(r="0x"+r);if(isHexable(r))return r.toHexString();if(isHexString(r)){r.length%2&&("left"===e.hexPad?r="0x0"+r.substring(2):"right"===e.hexPad?r+="0":t.throwArgumentError("hex data is odd-length","value",r));return r.toLowerCase()}if(isBytes(r)){let e="0x";for(let t=0;t<r.length;t++){let i=r[t];e+=n[(240&i)>>4]+n[15&i]}return e}return t.throwArgumentError("invalid hexlify value","value",r)}function hexDataLength(r){if("string"!==typeof r)r=hexlify(r);else if(!isHexString(r)||r.length%2)return null;return(r.length-2)/2}function hexDataSlice(r,e,n){"string"!==typeof r?r=hexlify(r):(!isHexString(r)||r.length%2)&&t.throwArgumentError("invalid hexData","value",r);e=2+2*e;return null!=n?"0x"+r.substring(e,2+2*n):"0x"+r.substring(e)}function hexConcat(r){let e="0x";r.forEach((r=>{e+=hexlify(r).substring(2)}));return e}function hexValue(r){const e=hexStripZeros(hexlify(r,{hexPad:"left"}));return"0x"===e?"0x0":e}function hexStripZeros(r){"string"!==typeof r&&(r=hexlify(r));isHexString(r)||t.throwArgumentError("invalid hex string","value",r);r=r.substring(2);let e=0;while(e<r.length&&"0"===r[e])e++;return"0x"+r.substring(e)}function hexZeroPad(r,e){"string"!==typeof r?r=hexlify(r):isHexString(r)||t.throwArgumentError("invalid hex string","value",r);r.length>2*e+2&&t.throwArgumentError("value out of range","value",arguments[1]);while(r.length<2*e+2)r="0x0"+r.substring(2);return r}function splitSignature(r){const e={r:"0x",s:"0x",_vs:"0x",recoveryParam:0,v:0,yParityAndS:"0x",compact:"0x"};if(isBytesLike(r)){let n=arrayify(r);if(64===n.length){e.v=27+(n[32]>>7);n[32]&=127;e.r=hexlify(n.slice(0,32));e.s=hexlify(n.slice(32,64))}else if(65===n.length){e.r=hexlify(n.slice(0,32));e.s=hexlify(n.slice(32,64));e.v=n[64]}else t.throwArgumentError("invalid signature string","signature",r);e.v<27&&(0===e.v||1===e.v?e.v+=27:t.throwArgumentError("signature invalid v byte","signature",r));e.recoveryParam=1-e.v%2;e.recoveryParam&&(n[32]|=128);e._vs=hexlify(n.slice(32,64))}else{e.r=r.r;e.s=r.s;e.v=r.v;e.recoveryParam=r.recoveryParam;e._vs=r._vs;if(null!=e._vs){const n=zeroPad(arrayify(e._vs),32);e._vs=hexlify(n);const i=n[0]>=128?1:0;null==e.recoveryParam?e.recoveryParam=i:e.recoveryParam!==i&&t.throwArgumentError("signature recoveryParam mismatch _vs","signature",r);n[0]&=127;const s=hexlify(n);null==e.s?e.s=s:e.s!==s&&t.throwArgumentError("signature v mismatch _vs","signature",r)}if(null==e.recoveryParam)null==e.v?t.throwArgumentError("signature missing v and recoveryParam","signature",r):0===e.v||1===e.v?e.recoveryParam=e.v:e.recoveryParam=1-e.v%2;else if(null==e.v)e.v=27+e.recoveryParam;else{const n=0===e.v||1===e.v?e.v:1-e.v%2;e.recoveryParam!==n&&t.throwArgumentError("signature recoveryParam mismatch v","signature",r)}null!=e.r&&isHexString(e.r)?e.r=hexZeroPad(e.r,32):t.throwArgumentError("signature missing or invalid r","signature",r);null!=e.s&&isHexString(e.s)?e.s=hexZeroPad(e.s,32):t.throwArgumentError("signature missing or invalid s","signature",r);const n=arrayify(e.s);n[0]>=128&&t.throwArgumentError("signature s out of range","signature",r);e.recoveryParam&&(n[0]|=128);const i=hexlify(n);if(e._vs){isHexString(e._vs)||t.throwArgumentError("signature invalid _vs","signature",r);e._vs=hexZeroPad(e._vs,32)}null==e._vs?e._vs=i:e._vs!==i&&t.throwArgumentError("signature _vs mismatch v and s","signature",r)}e.yParityAndS=e._vs;e.compact=e.r+e.yParityAndS.substring(2);return e}function joinSignature(r){r=splitSignature(r);return hexlify(concat([r.r,r.s,r.recoveryParam?"0x1c":"0x1b"]))}export{arrayify,concat,hexConcat,hexDataLength,hexDataSlice,hexStripZeros,hexValue,hexZeroPad,hexlify,isBytes,isBytesLike,isHexString,joinSignature,splitSignature,stripZeros,zeroPad};

