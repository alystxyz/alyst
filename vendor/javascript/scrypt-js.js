import r from"process";var e={};var n=r;(function(r){const t=2147483647;function SHA256(r){const e=new Uint32Array([1116352408,1899447441,3049323471,3921009573,961987163,1508970993,2453635748,2870763221,3624381080,310598401,607225278,1426881987,1925078388,2162078206,2614888103,3248222580,3835390401,4022224774,264347078,604807628,770255983,1249150122,1555081692,1996064986,2554220882,2821834349,2952996808,3210313671,3336571891,3584528711,113926993,338241895,666307205,773529912,1294757372,1396182291,1695183700,1986661051,2177026350,2456956037,2730485921,2820302411,3259730800,3345764771,3516065817,3600352804,4094571909,275423344,430227734,506948616,659060556,883997877,958139571,1322822218,1537002063,1747873779,1955562222,2024104815,2227730452,2361852424,2428436474,2756734187,3204031479,3329325298]);let n=1779033703,t=3144134277,o=1013904242,c=2773480762;let s=1359893119,l=2600822924,f=528734635,i=1541459225;const a=new Uint32Array(64);function blocks(r){let u=0,h=r.length;while(h>=64){let p=n,y=t,w=o,A=c,b=s,g=l,k=f,_=i,m,H,I,S,x;for(H=0;H<16;H++){I=u+4*H;a[H]=(255&r[I])<<24|(255&r[I+1])<<16|(255&r[I+2])<<8|255&r[I+3]}for(H=16;H<64;H++){m=a[H-2];S=(m>>>17|m<<32-17)^(m>>>19|m<<32-19)^m>>>10;m=a[H-15];x=(m>>>7|m<<32-7)^(m>>>18|m<<32-18)^m>>>3;a[H]=(S+a[H-7]|0)+(x+a[H-16]|0)|0}for(H=0;H<64;H++){S=(((b>>>6|b<<32-6)^(b>>>11|b<<32-11)^(b>>>25|b<<32-25))+(b&g^~b&k)|0)+(_+(e[H]+a[H]|0)|0)|0;x=((p>>>2|p<<32-2)^(p>>>13|p<<32-13)^(p>>>22|p<<32-22))+(p&y^p&w^y&w)|0;_=k;k=g;g=b;b=A+S|0;A=w;w=y;y=p;p=S+x|0}n=n+p|0;t=t+y|0;o=o+w|0;c=c+A|0;s=s+b|0;l=l+g|0;f=f+k|0;i=i+_|0;u+=64;h-=64}}blocks(r);let u,h=r.length%64,p=r.length/536870912|0,y=r.length<<3,w=h<56?56:120,A=r.slice(r.length-h,r.length);A.push(128);for(u=h+1;u<w;u++)A.push(0);A.push(p>>>24&255);A.push(p>>>16&255);A.push(p>>>8&255);A.push(p>>>0&255);A.push(y>>>24&255);A.push(y>>>16&255);A.push(y>>>8&255);A.push(y>>>0&255);blocks(A);return[n>>>24&255,n>>>16&255,n>>>8&255,n>>>0&255,t>>>24&255,t>>>16&255,t>>>8&255,t>>>0&255,o>>>24&255,o>>>16&255,o>>>8&255,o>>>0&255,c>>>24&255,c>>>16&255,c>>>8&255,c>>>0&255,s>>>24&255,s>>>16&255,s>>>8&255,s>>>0&255,l>>>24&255,l>>>16&255,l>>>8&255,l>>>0&255,f>>>24&255,f>>>16&255,f>>>8&255,f>>>0&255,i>>>24&255,i>>>16&255,i>>>8&255,i>>>0&255]}function PBKDF2_HMAC_SHA256_OneIter(r,e,n){r=r.length<=64?r:SHA256(r);const t=64+e.length+4;const o=new Array(t);const c=new Array(64);let s;let l=[];for(s=0;s<64;s++)o[s]=54;for(s=0;s<r.length;s++)o[s]^=r[s];for(s=0;s<e.length;s++)o[64+s]=e[s];for(s=t-4;s<t;s++)o[s]=0;for(s=0;s<64;s++)c[s]=92;for(s=0;s<r.length;s++)c[s]^=r[s];function incrementCounter(){for(let r=t-1;r>=t-4;r--){o[r]++;if(o[r]<=255)return;o[r]=0}}while(n>=32){incrementCounter();l=l.concat(SHA256(c.concat(SHA256(o))));n-=32}if(n>0){incrementCounter();l=l.concat(SHA256(c.concat(SHA256(o))).slice(0,n))}return l}function blockmix_salsa8(r,e,n,t,o){let c;arraycopy(r,16*(2*n-1),o,0,16);for(c=0;c<2*n;c++){blockxor(r,16*c,o,16);salsa20_8(o,t);arraycopy(o,0,r,e+16*c,16)}for(c=0;c<n;c++)arraycopy(r,e+2*c*16,r,16*c,16);for(c=0;c<n;c++)arraycopy(r,e+16*(2*c+1),r,16*(c+n),16)}function R(r,e){return r<<e|r>>>32-e}function salsa20_8(r,e){arraycopy(r,0,e,0,16);for(let r=8;r>0;r-=2){e[4]^=R(e[0]+e[12],7);e[8]^=R(e[4]+e[0],9);e[12]^=R(e[8]+e[4],13);e[0]^=R(e[12]+e[8],18);e[9]^=R(e[5]+e[1],7);e[13]^=R(e[9]+e[5],9);e[1]^=R(e[13]+e[9],13);e[5]^=R(e[1]+e[13],18);e[14]^=R(e[10]+e[6],7);e[2]^=R(e[14]+e[10],9);e[6]^=R(e[2]+e[14],13);e[10]^=R(e[6]+e[2],18);e[3]^=R(e[15]+e[11],7);e[7]^=R(e[3]+e[15],9);e[11]^=R(e[7]+e[3],13);e[15]^=R(e[11]+e[7],18);e[1]^=R(e[0]+e[3],7);e[2]^=R(e[1]+e[0],9);e[3]^=R(e[2]+e[1],13);e[0]^=R(e[3]+e[2],18);e[6]^=R(e[5]+e[4],7);e[7]^=R(e[6]+e[5],9);e[4]^=R(e[7]+e[6],13);e[5]^=R(e[4]+e[7],18);e[11]^=R(e[10]+e[9],7);e[8]^=R(e[11]+e[10],9);e[9]^=R(e[8]+e[11],13);e[10]^=R(e[9]+e[8],18);e[12]^=R(e[15]+e[14],7);e[13]^=R(e[12]+e[15],9);e[14]^=R(e[13]+e[12],13);e[15]^=R(e[14]+e[13],18)}for(let n=0;n<16;++n)r[n]+=e[n]}function blockxor(r,e,n,t){for(let o=0;o<t;o++)n[o]^=r[e+o]}function arraycopy(r,e,n,t,o){while(o--)n[t++]=r[e++]}function checkBufferish(r){if(!r||"number"!==typeof r.length)return false;for(let e=0;e<r.length;e++){const n=r[e];if("number"!==typeof n||n%1||n<0||n>=256)return false}return true}function ensureInteger(r,e){if("number"!==typeof r||r%1)throw new Error("invalid "+e);return r}function _scrypt(r,e,o,c,s,l,f){o=ensureInteger(o,"N");c=ensureInteger(c,"r");s=ensureInteger(s,"p");l=ensureInteger(l,"dkLen");if(0===o||0!==(o&o-1))throw new Error("N must be power of 2");if(o>t/128/c)throw new Error("N too large");if(c>t/128/s)throw new Error("r too large");if(!checkBufferish(r))throw new Error("password must be an array or buffer");r=Array.prototype.slice.call(r);if(!checkBufferish(e))throw new Error("salt must be an array or buffer");e=Array.prototype.slice.call(e);let i=PBKDF2_HMAC_SHA256_OneIter(r,e,128*s*c);const a=new Uint32Array(32*s*c);for(let r=0;r<a.length;r++){const e=4*r;a[r]=(255&i[e+3])<<24|(255&i[e+2])<<16|(255&i[e+1])<<8|(255&i[e+0])<<0}const u=new Uint32Array(64*c);const h=new Uint32Array(32*c*o);const p=32*c;const y=new Uint32Array(16);const w=new Uint32Array(16);const A=s*o*2;let b=0;let g=null;let k=false;let _=0;let m=0,H;let I;const S=f?parseInt(1e3/c):4294967295;const x="undefined"!==typeof n.nextTick?n.nextTick:setTimeout;const incrementalSMix=function(){if(k)return f(new Error("cancelled"),b/A);let e;switch(_){case 0:I=32*m*c;arraycopy(a,I,u,0,p);_=1;H=0;case 1:e=o-H;e>S&&(e=S);for(let r=0;r<e;r++){arraycopy(u,0,h,(H+r)*p,p);blockmix_salsa8(u,p,c,y,w)}H+=e;b+=e;if(f){const r=parseInt(1e3*b/A);if(r!==g){k=f(null,b/A);if(k)break;g=r}}if(H<o)break;H=0;_=2;case 2:e=o-H;e>S&&(e=S);for(let r=0;r<e;r++){const r=16*(2*c-1);const e=u[r]&o-1;blockxor(h,e*p,u,p);blockmix_salsa8(u,p,c,y,w)}H+=e;b+=e;if(f){const r=parseInt(1e3*b/A);if(r!==g){k=f(null,b/A);if(k)break;g=r}}if(H<o)break;arraycopy(u,0,a,I,p);m++;if(m<s){_=0;break}i=[];for(let r=0;r<a.length;r++){i.push(a[r]>>0&255);i.push(a[r]>>8&255);i.push(a[r]>>16&255);i.push(a[r]>>24&255)}const n=PBKDF2_HMAC_SHA256_OneIter(r,i,l);f&&f(null,1,n);return n}f&&x(incrementalSMix)};if(!f)while(true){const r=incrementalSMix();if(void 0!=r)return r}incrementalSMix()}const o={scrypt:function(r,e,n,t,o,c,s){return new Promise((function(l,f){let i=0;s&&s(0);_scrypt(r,e,n,t,o,c,(function(r,e,n){if(r)f(r);else if(n){s&&1!==i&&s(1);l(new Uint8Array(n))}else if(s&&e!==i){i=e;return s(e)}}))}))},syncScrypt:function(r,e,n,t,o,c){return new Uint8Array(_scrypt(r,e,n,t,o,c))}};e=o})(e);var t=e;export default t;

